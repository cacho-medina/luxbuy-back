//El comando para migrar la base de datos es: npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rol {
  ADMIN
  USER
}

enum OrderStatus {
  PENDING
  INPROCESS
  COMPLETED
  CANCELED
}

model User {
  id        String  @id @unique @default(cuid())
  name      String
  email     String  @unique
  rol       Rol     @default(USER)
  password  String
  isActive  Boolean @default(true)
  isDeleted Boolean @default(false)
  orders    Order[]

  profile   Profile? 
}

model Profile {
  id            String   @id @unique @default(cuid())
  address       String?
  dni           String?   @unique
  birthday      DateTime?  
  phone         String?
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @unique
  profileImage  String? 
}


model Category {
  id        String   @id @unique @default(cuid())
  name      String
  isDeleted Boolean  @default(false)
  products  ProductCategory[]
}

model Product {
  id          String   @id @unique @default(cuid())
  name        String
  description String?
  stock       Int
  price       Float
  isDeleted   Boolean  @default(false)
  orderItems  OrderItem[]
  images      Image[]
  categories  ProductCategory[]
}

// Tabla intermedia para la relacion entre productos y categorias
model ProductCategory {
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  @@id([productId, categoryId])
}


model Image {
  id        String  @id @unique @default(cuid())
  url       String
  altText   String?
  product   Product @relation(fields: [productId], references: [id])
  productId String
  isPrincipal Boolean @default(false)
}


model Order {
  id        String      @id @unique @default(cuid())
  items     OrderItem[]   //no deberia tener un product?
  status    OrderStatus @default(PENDING)
  price     Decimal     @default(0.00)
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime    @default(now())
}

model OrderItem {
  id        String   @id @unique @default(cuid())
  product   Product? @relation(fields: [productId], references: [id])
  quantity  Int      @default(0)
  price     Decimal  @default(0.00)
  order     Order?   @relation(fields: [orderId], references: [id])
  productId String?
  orderId   String
}
